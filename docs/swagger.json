{
    "swagger": "2.0",
    "info": {
        "description": "This is Open Couseware backend",
        "title": "Open Courseware Application",
        "contact": {},
        "version": "1.0.1"
    },
    "paths": {
        "/": {
            "get": {
                "description": "Give server index page response",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "common"
                ],
                "summary": "Index page",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Add new course",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "course"
                ],
                "summary": "Add new course",
                "parameters": [
                    {
                        "description": "Payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/add.AddCourseRequestPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    }
                }
            }
        },
        "/admin/user": {
            "get": {
                "description": "Get all users from database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get All User",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a user to database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Add User",
                "parameters": [
                    {
                        "description": "Admin Add User Payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.AdminAddUserPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    }
                }
            }
        },
        "/admin/user/{email}": {
            "get": {
                "description": "Get a user from database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get User By Email",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a user from database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Delete User By Id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a user from database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update User By Id",
                "parameters": [
                    {
                        "description": "Admin Update User Payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/admin.AdminUpdateUserPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Login and generate new pair of token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/login.LoginRequestPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/web.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/login.LoginResponsePayload"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Input",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/web.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "403": {
                        "description": "Login Credential Error",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    },
                    "415": {
                        "description": "Not a json request",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    },
                    "422": {
                        "description": "Invalid JSON input",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Unknown Internal Error",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Generate new access token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh Token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Refresh token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/web.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/refresh.RefreshResponsePayload"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Generate New Account as Member",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register New Account",
                "parameters": [
                    {
                        "description": "Register Payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/register.RegisterRequestPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    }
                }
            }
        },
        "/auth/verify": {
            "post": {
                "description": "Do Email Verification to user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Do Email Verification",
                "parameters": [
                    {
                        "description": "Register Payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/verification.VerificationRequestPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    }
                }
            }
        },
        "/auth/verify/resend": {
            "post": {
                "description": "Send Email Verification to user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Send Email Verification",
                "parameters": [
                    {
                        "description": "Register Payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/verification.VerificationSendRequestPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    }
                }
            }
        },
        "/course/{id}/material": {
            "post": {
                "description": "Add new material",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Add Material",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Material Request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/material.CreateMaterialRequest"
                        }
                    },
                    {
                        "type": "string",
                        "example": "IF3230",
                        "description": "Course id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/web.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/material.CreateMaterialResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    }
                }
            }
        },
        "/course/{id}/materials": {
            "get": {
                "description": "Get materials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Get materials",
                "parameters": [
                    {
                        "type": "string",
                        "example": "IF3270",
                        "description": "Course id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/web.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/material.Material"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/material/{id}": {
            "post": {
                "description": "Add content of material",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Add Content",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Add content request",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/material.NewContentRequest"
                        }
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Material id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/web.BaseResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/material.NewContentResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete material",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Delete material",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Material id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    }
                }
            }
        },
        "/material/{id}/content/{content-id}": {
            "delete": {
                "description": "Delete content of material",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "content"
                ],
                "summary": "Delete Content",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Material id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Content id",
                        "name": "content-id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    }
                }
            }
        },
        "/reset/confirm": {
            "put": {
                "description": "Do confirmation to reset password",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reset"
                ],
                "summary": "Confirm Reset Password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email validation token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/confirm.ConfirmRequestPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login Success",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    }
                }
            }
        },
        "/reset/request": {
            "post": {
                "description": "Send Reset password token to email",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reset"
                ],
                "summary": "Request Reset Password Token",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.RequestRequestPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login Success",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    }
                }
            }
        },
        "/reset/validate": {
            "get": {
                "description": "Send Reset password token to email",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reset"
                ],
                "summary": "Request Reset Password Token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email validation token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login Success",
                        "schema": {
                            "$ref": "#/definitions/web.BaseResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "add.AddCourseRequestPayload": {
            "description": "Information that should be available when you add a course",
            "type": "object",
            "required": [
                "abbreviation",
                "email",
                "id",
                "name"
            ],
            "properties": {
                "abbreviation": {
                    "description": "Course Name Abbreviation",
                    "type": "string"
                },
                "addCourseToken": {
                    "description": "Web Token that was appended to the link",
                    "type": "string"
                },
                "description": {
                    "description": "Course Description (Can be left empty)",
                    "type": "string"
                },
                "email": {
                    "description": "Contributor Email",
                    "type": "string",
                    "example": "someone@example.com"
                },
                "id": {
                    "description": "Course ID",
                    "type": "string"
                },
                "majabbr": {
                    "description": "Course Major Abbreviation",
                    "type": "string"
                },
                "major_id": {
                    "description": "Major Id, will be set by the server",
                    "type": "string"
                },
                "name": {
                    "description": "Course Name",
                    "type": "string"
                }
            }
        },
        "admin.AdminAddUserPayload": {
            "type": "object",
            "required": [
                "email",
                "name",
                "role"
            ],
            "properties": {
                "email": {
                    "description": "User Email",
                    "type": "string",
                    "example": "someone@example.com"
                },
                "name": {
                    "description": "User name",
                    "type": "string",
                    "example": "someone"
                },
                "role": {
                    "description": "User Role",
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "admin.AdminUpdateUserPayload": {
            "type": "object",
            "required": [
                "email",
                "name",
                "role"
            ],
            "properties": {
                "email": {
                    "description": "User Email",
                    "type": "string",
                    "example": "someone@example.com"
                },
                "name": {
                    "description": "User name",
                    "type": "string",
                    "example": "someone"
                },
                "role": {
                    "description": "User Role",
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "confirm.ConfirmRequestPayload": {
            "description": "Information that should be available when you confirm a password reset",
            "type": "object",
            "required": [
                "password",
                "password_validation"
            ],
            "properties": {
                "confirmToken": {
                    "description": "Web Token that was appended to the link",
                    "type": "string"
                },
                "password": {
                    "description": "User Password",
                    "type": "string",
                    "example": "secret"
                },
                "password_validation": {
                    "description": "User Password Validation, must be same as user",
                    "type": "string",
                    "example": "secret"
                }
            }
        },
        "login.LoginRequestPayload": {
            "description": "Information that should be available when do a login process",
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "description": "User Email",
                    "type": "string",
                    "example": "someone@example.com"
                },
                "password": {
                    "description": "User Password",
                    "type": "string",
                    "example": "secret"
                }
            }
        },
        "login.LoginResponsePayload": {
            "description": "Login response when process success",
            "type": "object",
            "properties": {
                "access_token": {
                    "description": "Token that used to access the resources",
                    "type": "string"
                },
                "refresh_token": {
                    "description": "Token that used to generate new access token",
                    "type": "string"
                }
            }
        },
        "material.Content": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "material_id": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/material.MaterialType"
                }
            }
        },
        "material.CreateMaterialRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "material.CreateMaterialResponse": {
            "type": "object",
            "properties": {
                "material_id": {
                    "type": "string"
                }
            }
        },
        "material.Material": {
            "type": "object",
            "properties": {
                "contents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/material.Content"
                    }
                },
                "course_id": {
                    "type": "string"
                },
                "creator_email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "week": {
                    "type": "integer"
                }
            }
        },
        "material.MaterialType": {
            "type": "integer",
            "enum": [
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "Handout",
                "Video",
                "External"
            ]
        },
        "material.NewContentRequest": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "link": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/material.MaterialType"
                }
            }
        },
        "material.NewContentResponse": {
            "type": "object",
            "properties": {
                "upload_link": {
                    "type": "string"
                }
            }
        },
        "refresh.RefreshResponsePayload": {
            "description": "Refresh endpoint response when process success",
            "type": "object",
            "properties": {
                "access_token": {
                    "description": "Token that used to access the resources",
                    "type": "string"
                }
            }
        },
        "register.RegisterRequestPayload": {
            "description": "Information that should be available when do a registration process",
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "password_validation"
            ],
            "properties": {
                "email": {
                    "description": "User Email",
                    "type": "string",
                    "example": "someone@example.com"
                },
                "name": {
                    "description": "User name",
                    "type": "string",
                    "example": "someone"
                },
                "password": {
                    "description": "User Password",
                    "type": "string",
                    "example": "secret"
                },
                "password_validation": {
                    "description": "User Password Validation, must be same as user",
                    "type": "string",
                    "example": "secret"
                }
            }
        },
        "request.RequestRequestPayload": {
            "description": "Information that should be available when password reset is requested",
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "description": "User Email",
                    "type": "string",
                    "example": "someone@example.com"
                }
            }
        },
        "verification.VerificationRequestPayload": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "example": "6ba7b812-9dad-11d1-80b4-00c04fd430c8"
                }
            }
        },
        "verification.VerificationSendRequestPayload": {
            "description": "Information that should be passed when request verify",
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "description": "User Email",
                    "type": "string",
                    "example": "someone@example.com"
                }
            }
        },
        "web.BaseResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "success",
                        "failed"
                    ]
                }
            }
        }
    }
}