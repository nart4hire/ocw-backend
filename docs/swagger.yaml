definitions:
  add.AddCourseRequestPayload:
    description: Information that should be available when you add a course
    properties:
      abbreviation:
        description: Course Name Abbreviation
        type: string
      addCourseToken:
        description: Web Token that was appended to the link
        type: string
      description:
        description: Course Description (Can be left empty)
        type: string
      email:
        description: Contributor Email
        example: someone@example.com
        type: string
      id:
        description: Course ID
        type: string
      majabbr:
        description: Course Major Abbreviation
        type: string
      major_id:
        description: Major Id, will be set by the server
        type: string
      name:
        description: Course Name
        type: string
    required:
    - abbreviation
    - email
    - id
    - name
    type: object
  admin.AdminAddUserPayload:
    properties:
      email:
        description: User Email
        example: someone@example.com
        type: string
      name:
        description: User name
        example: someone
        type: string
      role:
        description: User Role
        example: admin
        type: string
    required:
    - email
    - name
    - role
    type: object
  admin.AdminUpdateUserPayload:
    properties:
      email:
        description: User Email
        example: someone@example.com
        type: string
      name:
        description: User name
        example: someone
        type: string
      role:
        description: User Role
        example: admin
        type: string
    required:
    - email
    - name
    - role
    type: object
  confirm.ConfirmRequestPayload:
    description: Information that should be available when you confirm a password
      reset
    properties:
      confirmToken:
        description: Web Token that was appended to the link
        type: string
      password:
        description: User Password
        example: secret
        type: string
      password_validation:
        description: User Password Validation, must be same as user
        example: secret
        type: string
    required:
    - password
    - password_validation
    type: object
  login.LoginRequestPayload:
    description: Information that should be available when do a login process
    properties:
      email:
        description: User Email
        example: someone@example.com
        type: string
      password:
        description: User Password
        example: secret
        type: string
    required:
    - email
    - password
    type: object
  login.LoginResponsePayload:
    description: Login response when process success
    properties:
      access_token:
        description: Token that used to access the resources
        type: string
      refresh_token:
        description: Token that used to generate new access token
        type: string
    type: object
  material.Content:
    properties:
      id:
        type: string
      link:
        type: string
      material_id:
        type: string
      type:
        $ref: '#/definitions/material.MaterialType'
    type: object
  material.CreateMaterialRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  material.CreateMaterialResponse:
    properties:
      material_id:
        type: string
    type: object
  material.Material:
    properties:
      contents:
        items:
          $ref: '#/definitions/material.Content'
        type: array
      course_id:
        type: string
      creator_email:
        type: string
      id:
        type: string
      name:
        type: string
      week:
        type: integer
    type: object
  material.MaterialType:
    enum:
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - Handout
    - Video
    - External
  material.NewContentRequest:
    properties:
      link:
        type: string
      type:
        $ref: '#/definitions/material.MaterialType'
    required:
    - type
    type: object
  material.NewContentResponse:
    properties:
      upload_link:
        type: string
    type: object
  refresh.RefreshResponsePayload:
    description: Refresh endpoint response when process success
    properties:
      access_token:
        description: Token that used to access the resources
        type: string
    type: object
  register.RegisterRequestPayload:
    description: Information that should be available when do a registration process
    properties:
      email:
        description: User Email
        example: someone@example.com
        type: string
      name:
        description: User name
        example: someone
        type: string
      password:
        description: User Password
        example: secret
        type: string
      password_validation:
        description: User Password Validation, must be same as user
        example: secret
        type: string
    required:
    - email
    - name
    - password
    - password_validation
    type: object
  request.RequestRequestPayload:
    description: Information that should be available when password reset is requested
    properties:
      email:
        description: User Email
        example: someone@example.com
        type: string
    required:
    - email
    type: object
  verification.VerificationRequestPayload:
    properties:
      id:
        example: 6ba7b812-9dad-11d1-80b4-00c04fd430c8
        type: string
    required:
    - id
    type: object
  verification.VerificationSendRequestPayload:
    description: Information that should be passed when request verify
    properties:
      email:
        description: User Email
        example: someone@example.com
        type: string
    required:
    - email
    type: object
  web.BaseResponse:
    properties:
      data: {}
      message:
        type: string
      status:
        enum:
        - success
        - failed
        type: string
    type: object
info:
  contact: {}
  description: This is Open Couseware backend
  title: Open Courseware Application
  version: 1.0.1
paths:
  /:
    get:
      description: Give server index page response
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.BaseResponse'
      summary: Index page
      tags:
      - common
    put:
      description: Add new course
      parameters:
      - description: Payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/add.AddCourseRequestPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.BaseResponse'
      summary: Add new course
      tags:
      - course
  /admin/user:
    get:
      description: Get all users from database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.BaseResponse'
      summary: Get All User
      tags:
      - admin
    post:
      consumes:
      - application/json
      description: Add a user to database
      parameters:
      - description: Admin Add User Payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/admin.AdminAddUserPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.BaseResponse'
      summary: Add User
      tags:
      - admin
  /admin/user/{email}:
    delete:
      consumes:
      - application/json
      description: Delete a user from database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.BaseResponse'
      summary: Delete User By Id
      tags:
      - admin
    get:
      description: Get a user from database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.BaseResponse'
      summary: Get User By Email
      tags:
      - admin
    patch:
      consumes:
      - application/json
      description: Update a user from database
      parameters:
      - description: Admin Update User Payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/admin.AdminUpdateUserPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.BaseResponse'
      summary: Update User By Id
      tags:
      - admin
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login and generate new pair of token
      parameters:
      - description: Login payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/login.LoginRequestPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Login Success
          schema:
            allOf:
            - $ref: '#/definitions/web.BaseResponse'
            - properties:
                data:
                  $ref: '#/definitions/login.LoginResponsePayload'
              type: object
        "400":
          description: Bad Input
          schema:
            allOf:
            - $ref: '#/definitions/web.BaseResponse'
            - properties:
                data:
                  items:
                    type: string
                  type: array
              type: object
        "403":
          description: Login Credential Error
          schema:
            $ref: '#/definitions/web.BaseResponse'
        "415":
          description: Not a json request
          schema:
            $ref: '#/definitions/web.BaseResponse'
        "422":
          description: Invalid JSON input
          schema:
            $ref: '#/definitions/web.BaseResponse'
        "500":
          description: Unknown Internal Error
          schema:
            $ref: '#/definitions/web.BaseResponse'
      summary: Login
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Generate new access token
      parameters:
      - description: Refresh token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/web.BaseResponse'
            - properties:
                data:
                  $ref: '#/definitions/refresh.RefreshResponsePayload'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.BaseResponse'
      summary: Refresh Token
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Generate New Account as Member
      parameters:
      - description: Register Payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/register.RegisterRequestPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.BaseResponse'
      summary: Register New Account
      tags:
      - auth
  /auth/verify:
    post:
      consumes:
      - application/json
      description: Do Email Verification to user
      parameters:
      - description: Register Payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/verification.VerificationRequestPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.BaseResponse'
      summary: Do Email Verification
      tags:
      - auth
  /auth/verify/resend:
    post:
      consumes:
      - application/json
      description: Send Email Verification to user
      parameters:
      - description: Register Payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/verification.VerificationSendRequestPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.BaseResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/web.BaseResponse'
      summary: Send Email Verification
      tags:
      - auth
  /course/{id}/material:
    post:
      consumes:
      - application/json
      description: Add new material
      parameters:
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Material Request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/material.CreateMaterialRequest'
      - description: Course id
        example: IF3230
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/web.BaseResponse'
            - properties:
                data:
                  $ref: '#/definitions/material.CreateMaterialResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.BaseResponse'
      summary: Add Material
      tags:
      - content
  /course/{id}/materials:
    get:
      consumes:
      - application/json
      description: Get materials
      parameters:
      - description: Course id
        example: IF3270
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/web.BaseResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/material.Material'
                  type: array
              type: object
      summary: Get materials
      tags:
      - content
  /material/{id}:
    delete:
      consumes:
      - application/json
      description: Delete material
      parameters:
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Material id
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.BaseResponse'
      summary: Delete material
      tags:
      - content
    post:
      consumes:
      - application/json
      description: Add content of material
      parameters:
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Add content request
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/material.NewContentRequest'
      - description: Material id
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/web.BaseResponse'
            - properties:
                data:
                  $ref: '#/definitions/material.NewContentResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/web.BaseResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/web.BaseResponse'
      summary: Add Content
      tags:
      - content
  /material/{id}/content/{content-id}:
    delete:
      consumes:
      - application/json
      description: Delete content of material
      parameters:
      - description: Access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Material id
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: Content id
        format: uuid
        in: path
        name: content-id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/web.BaseResponse'
      summary: Delete Content
      tags:
      - content
  /reset/confirm:
    put:
      description: Do confirmation to reset password
      parameters:
      - description: Email validation token
        in: header
        name: Authorization
        required: true
        type: string
      - description: payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/confirm.ConfirmRequestPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Login Success
          schema:
            $ref: '#/definitions/web.BaseResponse'
      summary: Confirm Reset Password
      tags:
      - reset
  /reset/request:
    post:
      description: Send Reset password token to email
      parameters:
      - description: payload
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/request.RequestRequestPayload'
      produces:
      - application/json
      responses:
        "200":
          description: Login Success
          schema:
            $ref: '#/definitions/web.BaseResponse'
      summary: Request Reset Password Token
      tags:
      - reset
  /reset/validate:
    get:
      description: Send Reset password token to email
      parameters:
      - description: Email validation token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Login Success
          schema:
            $ref: '#/definitions/web.BaseResponse'
      summary: Request Reset Password Token
      tags:
      - reset
swagger: "2.0"
